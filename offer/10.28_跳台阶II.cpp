class Solution {
public:
    int jumpFloorII(int number) {
        if(number<=0) return 0;
        else return 1<<number;
		//对噶该用位运算的
		//else return pow(2,number-1);
    }
};

/*
变态跳台阶，一次可以跳跃1~n台
该问题还是一个切分的问题
对比之前1/2的跳跃 r[n]=r[n-1]+r[n-2] 其中n-1就是确定第一步1，n-2就是确定第一步为2
这里体现的思想就是确定部分步，得到剩余的跳法
之前也比较纠结重复的问题，其实就可以看成第一步/或者最后一步，余下的问题就切割开成更小的问题了，不需要在意
------------------------
这一道题由于变成了1~n，更容易纠结重复，不过也是一样的
可以看成第一步跳1<=i<=n  （注意可以为n所以第一步可以考虑n
那么剩下的就成了跳 n-1 n-2 …… 1 0步 的问题了，其中n就一次性跳过去，剩下的是0，所以可以f(0)=0,f(1)=1
f(2)=f(1)+f(0)=2
f(3)=f(2)+f(1)+f(0)=4
f(4)=f(3)+f(2)+f(1)+f(0)=8
则可知规律
*/