/**
1.想复杂了，不过这样整数的问题注意不要轻易地想用字符串来完成
2.可以考虑一下如果是二进制又要怎么做（应该是一样的方法
3.注意运算优先级
i*a/10和i*(a/10)结果并不一样
4.注意从 0~n 总数为n+1而不是n，看清楚
5.注意边界<=n还是<n
*/
class Solution {
public:
    int NumberOf1Between1AndN_Solution(int n)
    {
        if(n<=0) return 0;
        //每一位的1出现次数有规律
        /*不确定怎么分割，原本准备每一位分一下，放在一个数组中，其实肯定没必要，而且这样不便于统计到底有多少个整块*/
        /*单独计算满100 10的1个数，很乱*/
        int i,count=0;
        for(i=1;i<=n;i*=10){
            int a,b,c;
            a=n/i,b=n%i;//低位 高位
            c=a%10;
            if(c==0){
                /*考虑十位 如305 考虑0~2 1 0~9 i=10 count+=2*10
                */
                count+=i*(a/10);//a=3 3-1=2
            }
            else if(c==1){
                count+=i*(a/10)+b+1;//0~2 1 0~9 以及 3 1 0~b
            }
            //>=2了 完整的 328  0~3 1 0~9 30
            else count+=i*(a/10+1);
        }
        return count;
    }
};
